// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        (unknown)
// source: protobuf/clientRPC.proto

package protobuf

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_protobuf_clientRPC_proto protoreflect.FileDescriptor

var file_protobuf_clientRPC_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x50, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x4b, 0x56, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x44, 0x4c, 0x6f, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xd6, 0x04, 0x0a, 0x14, 0x52, 0x61, 0x66, 0x74, 0x52, 0x50,
	0x43, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x5c,
	0x0a, 0x11, 0x50, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x56, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x56, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4b, 0x56, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x56, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x56, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x56,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x56, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x56, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x13, 0x41, 0x63, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x44, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x44, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x44, 0x4c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x4c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x13, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x4c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44,
	0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x20,
	0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_protobuf_clientRPC_proto_goTypes = []interface{}{
	(*ClientPutStateKVRequest)(nil),    // 0: protobuf.ClientPutStateKVRequest
	(*ClientGetStateKVRequest)(nil),    // 1: protobuf.ClientGetStateKVRequest
	(*ClientDelStateKVRequest)(nil),    // 2: protobuf.ClientDelStateKVRequest
	(*ClientAcquireDLockRequest)(nil),  // 3: protobuf.ClientAcquireDLockRequest
	(*ClientQueryDLockRequest)(nil),    // 4: protobuf.ClientQueryDLockRequest
	(*ClientReleaseDLockRequest)(nil),  // 5: protobuf.ClientReleaseDLockRequest
	(*ClientPutStateKVResponse)(nil),   // 6: protobuf.ClientPutStateKVResponse
	(*ClientGetStateKVResponse)(nil),   // 7: protobuf.ClientGetStateKVResponse
	(*ClientDelStateKVResponse)(nil),   // 8: protobuf.ClientDelStateKVResponse
	(*ClientAcquireDLockResponse)(nil), // 9: protobuf.ClientAcquireDLockResponse
	(*ClientQueryDLockResponse)(nil),   // 10: protobuf.ClientQueryDLockResponse
	(*ClientReleaseDLockResponse)(nil), // 11: protobuf.ClientReleaseDLockResponse
}
var file_protobuf_clientRPC_proto_depIdxs = []int32{
	0,  // 0: protobuf.RaftRPCOutsideClient.PutStateKVService:input_type -> protobuf.ClientPutStateKVRequest
	1,  // 1: protobuf.RaftRPCOutsideClient.GetStateKVService:input_type -> protobuf.ClientGetStateKVRequest
	2,  // 2: protobuf.RaftRPCOutsideClient.DelStateKVService:input_type -> protobuf.ClientDelStateKVRequest
	3,  // 3: protobuf.RaftRPCOutsideClient.AcquireDLockService:input_type -> protobuf.ClientAcquireDLockRequest
	4,  // 4: protobuf.RaftRPCOutsideClient.QueryDLockService:input_type -> protobuf.ClientQueryDLockRequest
	5,  // 5: protobuf.RaftRPCOutsideClient.ReleaseDLockService:input_type -> protobuf.ClientReleaseDLockRequest
	6,  // 6: protobuf.RaftRPCOutsideClient.PutStateKVService:output_type -> protobuf.ClientPutStateKVResponse
	7,  // 7: protobuf.RaftRPCOutsideClient.GetStateKVService:output_type -> protobuf.ClientGetStateKVResponse
	8,  // 8: protobuf.RaftRPCOutsideClient.DelStateKVService:output_type -> protobuf.ClientDelStateKVResponse
	9,  // 9: protobuf.RaftRPCOutsideClient.AcquireDLockService:output_type -> protobuf.ClientAcquireDLockResponse
	10, // 10: protobuf.RaftRPCOutsideClient.QueryDLockService:output_type -> protobuf.ClientQueryDLockResponse
	11, // 11: protobuf.RaftRPCOutsideClient.ReleaseDLockService:output_type -> protobuf.ClientReleaseDLockResponse
	6,  // [6:12] is the sub-list for method output_type
	0,  // [0:6] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_protobuf_clientRPC_proto_init() }
func file_protobuf_clientRPC_proto_init() {
	if File_protobuf_clientRPC_proto != nil {
		return
	}
	file_protobuf_clientModelsKV_proto_init()
	file_protobuf_clientModelsDLock_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_clientRPC_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_clientRPC_proto_goTypes,
		DependencyIndexes: file_protobuf_clientRPC_proto_depIdxs,
	}.Build()
	File_protobuf_clientRPC_proto = out.File
	file_protobuf_clientRPC_proto_rawDesc = nil
	file_protobuf_clientRPC_proto_goTypes = nil
	file_protobuf_clientRPC_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RaftRPCOutsideClientClient is the client API for RaftRPCOutsideClient service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftRPCOutsideClientClient interface {
	PutStateKVService(ctx context.Context, in *ClientPutStateKVRequest, opts ...grpc.CallOption) (*ClientPutStateKVResponse, error)
	GetStateKVService(ctx context.Context, in *ClientGetStateKVRequest, opts ...grpc.CallOption) (*ClientGetStateKVResponse, error)
	DelStateKVService(ctx context.Context, in *ClientDelStateKVRequest, opts ...grpc.CallOption) (*ClientDelStateKVResponse, error)
	AcquireDLockService(ctx context.Context, in *ClientAcquireDLockRequest, opts ...grpc.CallOption) (*ClientAcquireDLockResponse, error)
	QueryDLockService(ctx context.Context, in *ClientQueryDLockRequest, opts ...grpc.CallOption) (*ClientQueryDLockResponse, error)
	ReleaseDLockService(ctx context.Context, in *ClientReleaseDLockRequest, opts ...grpc.CallOption) (*ClientReleaseDLockResponse, error)
}

type raftRPCOutsideClientClient struct {
	cc grpc.ClientConnInterface
}

func NewRaftRPCOutsideClientClient(cc grpc.ClientConnInterface) RaftRPCOutsideClientClient {
	return &raftRPCOutsideClientClient{cc}
}

func (c *raftRPCOutsideClientClient) PutStateKVService(ctx context.Context, in *ClientPutStateKVRequest, opts ...grpc.CallOption) (*ClientPutStateKVResponse, error) {
	out := new(ClientPutStateKVResponse)
	err := c.cc.Invoke(ctx, "/protobuf.RaftRPCOutsideClient/PutStateKVService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftRPCOutsideClientClient) GetStateKVService(ctx context.Context, in *ClientGetStateKVRequest, opts ...grpc.CallOption) (*ClientGetStateKVResponse, error) {
	out := new(ClientGetStateKVResponse)
	err := c.cc.Invoke(ctx, "/protobuf.RaftRPCOutsideClient/GetStateKVService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftRPCOutsideClientClient) DelStateKVService(ctx context.Context, in *ClientDelStateKVRequest, opts ...grpc.CallOption) (*ClientDelStateKVResponse, error) {
	out := new(ClientDelStateKVResponse)
	err := c.cc.Invoke(ctx, "/protobuf.RaftRPCOutsideClient/DelStateKVService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftRPCOutsideClientClient) AcquireDLockService(ctx context.Context, in *ClientAcquireDLockRequest, opts ...grpc.CallOption) (*ClientAcquireDLockResponse, error) {
	out := new(ClientAcquireDLockResponse)
	err := c.cc.Invoke(ctx, "/protobuf.RaftRPCOutsideClient/AcquireDLockService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftRPCOutsideClientClient) QueryDLockService(ctx context.Context, in *ClientQueryDLockRequest, opts ...grpc.CallOption) (*ClientQueryDLockResponse, error) {
	out := new(ClientQueryDLockResponse)
	err := c.cc.Invoke(ctx, "/protobuf.RaftRPCOutsideClient/QueryDLockService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftRPCOutsideClientClient) ReleaseDLockService(ctx context.Context, in *ClientReleaseDLockRequest, opts ...grpc.CallOption) (*ClientReleaseDLockResponse, error) {
	out := new(ClientReleaseDLockResponse)
	err := c.cc.Invoke(ctx, "/protobuf.RaftRPCOutsideClient/ReleaseDLockService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftRPCOutsideClientServer is the server API for RaftRPCOutsideClient service.
type RaftRPCOutsideClientServer interface {
	PutStateKVService(context.Context, *ClientPutStateKVRequest) (*ClientPutStateKVResponse, error)
	GetStateKVService(context.Context, *ClientGetStateKVRequest) (*ClientGetStateKVResponse, error)
	DelStateKVService(context.Context, *ClientDelStateKVRequest) (*ClientDelStateKVResponse, error)
	AcquireDLockService(context.Context, *ClientAcquireDLockRequest) (*ClientAcquireDLockResponse, error)
	QueryDLockService(context.Context, *ClientQueryDLockRequest) (*ClientQueryDLockResponse, error)
	ReleaseDLockService(context.Context, *ClientReleaseDLockRequest) (*ClientReleaseDLockResponse, error)
}

// UnimplementedRaftRPCOutsideClientServer can be embedded to have forward compatible implementations.
type UnimplementedRaftRPCOutsideClientServer struct {
}

func (*UnimplementedRaftRPCOutsideClientServer) PutStateKVService(context.Context, *ClientPutStateKVRequest) (*ClientPutStateKVResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutStateKVService not implemented")
}
func (*UnimplementedRaftRPCOutsideClientServer) GetStateKVService(context.Context, *ClientGetStateKVRequest) (*ClientGetStateKVResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStateKVService not implemented")
}
func (*UnimplementedRaftRPCOutsideClientServer) DelStateKVService(context.Context, *ClientDelStateKVRequest) (*ClientDelStateKVResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelStateKVService not implemented")
}
func (*UnimplementedRaftRPCOutsideClientServer) AcquireDLockService(context.Context, *ClientAcquireDLockRequest) (*ClientAcquireDLockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcquireDLockService not implemented")
}
func (*UnimplementedRaftRPCOutsideClientServer) QueryDLockService(context.Context, *ClientQueryDLockRequest) (*ClientQueryDLockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryDLockService not implemented")
}
func (*UnimplementedRaftRPCOutsideClientServer) ReleaseDLockService(context.Context, *ClientReleaseDLockRequest) (*ClientReleaseDLockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseDLockService not implemented")
}

func RegisterRaftRPCOutsideClientServer(s *grpc.Server, srv RaftRPCOutsideClientServer) {
	s.RegisterService(&_RaftRPCOutsideClient_serviceDesc, srv)
}

func _RaftRPCOutsideClient_PutStateKVService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientPutStateKVRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftRPCOutsideClientServer).PutStateKVService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RaftRPCOutsideClient/PutStateKVService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftRPCOutsideClientServer).PutStateKVService(ctx, req.(*ClientPutStateKVRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftRPCOutsideClient_GetStateKVService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientGetStateKVRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftRPCOutsideClientServer).GetStateKVService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RaftRPCOutsideClient/GetStateKVService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftRPCOutsideClientServer).GetStateKVService(ctx, req.(*ClientGetStateKVRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftRPCOutsideClient_DelStateKVService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientDelStateKVRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftRPCOutsideClientServer).DelStateKVService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RaftRPCOutsideClient/DelStateKVService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftRPCOutsideClientServer).DelStateKVService(ctx, req.(*ClientDelStateKVRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftRPCOutsideClient_AcquireDLockService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientAcquireDLockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftRPCOutsideClientServer).AcquireDLockService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RaftRPCOutsideClient/AcquireDLockService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftRPCOutsideClientServer).AcquireDLockService(ctx, req.(*ClientAcquireDLockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftRPCOutsideClient_QueryDLockService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientQueryDLockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftRPCOutsideClientServer).QueryDLockService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RaftRPCOutsideClient/QueryDLockService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftRPCOutsideClientServer).QueryDLockService(ctx, req.(*ClientQueryDLockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftRPCOutsideClient_ReleaseDLockService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientReleaseDLockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftRPCOutsideClientServer).ReleaseDLockService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RaftRPCOutsideClient/ReleaseDLockService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftRPCOutsideClientServer).ReleaseDLockService(ctx, req.(*ClientReleaseDLockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RaftRPCOutsideClient_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.RaftRPCOutsideClient",
	HandlerType: (*RaftRPCOutsideClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutStateKVService",
			Handler:    _RaftRPCOutsideClient_PutStateKVService_Handler,
		},
		{
			MethodName: "GetStateKVService",
			Handler:    _RaftRPCOutsideClient_GetStateKVService_Handler,
		},
		{
			MethodName: "DelStateKVService",
			Handler:    _RaftRPCOutsideClient_DelStateKVService_Handler,
		},
		{
			MethodName: "AcquireDLockService",
			Handler:    _RaftRPCOutsideClient_AcquireDLockService_Handler,
		},
		{
			MethodName: "QueryDLockService",
			Handler:    _RaftRPCOutsideClient_QueryDLockService_Handler,
		},
		{
			MethodName: "ReleaseDLockService",
			Handler:    _RaftRPCOutsideClient_ReleaseDLockService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/clientRPC.proto",
}
