// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        (unknown)
// source: protobuf/raftRPC.proto

package protobuf

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_protobuf_raftRPC_proto protoreflect.FileDescriptor

var file_protobuf_raftRPC_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x61, 0x66, 0x74, 0x52,
	0x50, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xa6,
	0x02, 0x0a, 0x0d, 0x52, 0x61, 0x66, 0x74, 0x52, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x59, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x15, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x15, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x20, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x66, 0x74,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var file_protobuf_raftRPC_proto_goTypes = []interface{}{
	(*AppendEntriesRequest)(nil),   // 0: protobuf.AppendEntriesRequest
	(*RecoverEntriesRequest)(nil),  // 1: protobuf.RecoverEntriesRequest
	(*CandidateVotesRequest)(nil),  // 2: protobuf.CandidateVotesRequest
	(*AppendEntriesResponse)(nil),  // 3: protobuf.AppendEntriesResponse
	(*RecoverEntriesResponse)(nil), // 4: protobuf.RecoverEntriesResponse
	(*CandidateVotesResponse)(nil), // 5: protobuf.CandidateVotesResponse
}
var file_protobuf_raftRPC_proto_depIdxs = []int32{
	0, // 0: protobuf.RaftRPCServer.AppendEntriesService:input_type -> protobuf.AppendEntriesRequest
	1, // 1: protobuf.RaftRPCServer.RecoverEntriesService:input_type -> protobuf.RecoverEntriesRequest
	2, // 2: protobuf.RaftRPCServer.CandidateVotesService:input_type -> protobuf.CandidateVotesRequest
	3, // 3: protobuf.RaftRPCServer.AppendEntriesService:output_type -> protobuf.AppendEntriesResponse
	4, // 4: protobuf.RaftRPCServer.RecoverEntriesService:output_type -> protobuf.RecoverEntriesResponse
	5, // 5: protobuf.RaftRPCServer.CandidateVotesService:output_type -> protobuf.CandidateVotesResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protobuf_raftRPC_proto_init() }
func file_protobuf_raftRPC_proto_init() {
	if File_protobuf_raftRPC_proto != nil {
		return
	}
	file_protobuf_candidateVotes_proto_init()
	file_protobuf_recoverEntries_proto_init()
	file_protobuf_appendEntries_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_raftRPC_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_raftRPC_proto_goTypes,
		DependencyIndexes: file_protobuf_raftRPC_proto_depIdxs,
	}.Build()
	File_protobuf_raftRPC_proto = out.File
	file_protobuf_raftRPC_proto_rawDesc = nil
	file_protobuf_raftRPC_proto_goTypes = nil
	file_protobuf_raftRPC_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RaftRPCServerClient is the client API for RaftRPCServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftRPCServerClient interface {
	AppendEntriesService(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error)
	RecoverEntriesService(ctx context.Context, in *RecoverEntriesRequest, opts ...grpc.CallOption) (*RecoverEntriesResponse, error)
	CandidateVotesService(ctx context.Context, in *CandidateVotesRequest, opts ...grpc.CallOption) (*CandidateVotesResponse, error)
}

type raftRPCServerClient struct {
	cc grpc.ClientConnInterface
}

func NewRaftRPCServerClient(cc grpc.ClientConnInterface) RaftRPCServerClient {
	return &raftRPCServerClient{cc}
}

func (c *raftRPCServerClient) AppendEntriesService(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error) {
	out := new(AppendEntriesResponse)
	err := c.cc.Invoke(ctx, "/protobuf.RaftRPCServer/AppendEntriesService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftRPCServerClient) RecoverEntriesService(ctx context.Context, in *RecoverEntriesRequest, opts ...grpc.CallOption) (*RecoverEntriesResponse, error) {
	out := new(RecoverEntriesResponse)
	err := c.cc.Invoke(ctx, "/protobuf.RaftRPCServer/RecoverEntriesService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftRPCServerClient) CandidateVotesService(ctx context.Context, in *CandidateVotesRequest, opts ...grpc.CallOption) (*CandidateVotesResponse, error) {
	out := new(CandidateVotesResponse)
	err := c.cc.Invoke(ctx, "/protobuf.RaftRPCServer/CandidateVotesService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftRPCServerServer is the server API for RaftRPCServer service.
type RaftRPCServerServer interface {
	AppendEntriesService(context.Context, *AppendEntriesRequest) (*AppendEntriesResponse, error)
	RecoverEntriesService(context.Context, *RecoverEntriesRequest) (*RecoverEntriesResponse, error)
	CandidateVotesService(context.Context, *CandidateVotesRequest) (*CandidateVotesResponse, error)
}

// UnimplementedRaftRPCServerServer can be embedded to have forward compatible implementations.
type UnimplementedRaftRPCServerServer struct {
}

func (*UnimplementedRaftRPCServerServer) AppendEntriesService(context.Context, *AppendEntriesRequest) (*AppendEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppendEntriesService not implemented")
}
func (*UnimplementedRaftRPCServerServer) RecoverEntriesService(context.Context, *RecoverEntriesRequest) (*RecoverEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecoverEntriesService not implemented")
}
func (*UnimplementedRaftRPCServerServer) CandidateVotesService(context.Context, *CandidateVotesRequest) (*CandidateVotesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CandidateVotesService not implemented")
}

func RegisterRaftRPCServerServer(s *grpc.Server, srv RaftRPCServerServer) {
	s.RegisterService(&_RaftRPCServer_serviceDesc, srv)
}

func _RaftRPCServer_AppendEntriesService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftRPCServerServer).AppendEntriesService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RaftRPCServer/AppendEntriesService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftRPCServerServer).AppendEntriesService(ctx, req.(*AppendEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftRPCServer_RecoverEntriesService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecoverEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftRPCServerServer).RecoverEntriesService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RaftRPCServer/RecoverEntriesService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftRPCServerServer).RecoverEntriesService(ctx, req.(*RecoverEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftRPCServer_CandidateVotesService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CandidateVotesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftRPCServerServer).CandidateVotesService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RaftRPCServer/CandidateVotesService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftRPCServerServer).CandidateVotesService(ctx, req.(*CandidateVotesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RaftRPCServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.RaftRPCServer",
	HandlerType: (*RaftRPCServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppendEntriesService",
			Handler:    _RaftRPCServer_AppendEntriesService_Handler,
		},
		{
			MethodName: "RecoverEntriesService",
			Handler:    _RaftRPCServer_RecoverEntriesService_Handler,
		},
		{
			MethodName: "CandidateVotesService",
			Handler:    _RaftRPCServer_CandidateVotesService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/raftRPC.proto",
}
